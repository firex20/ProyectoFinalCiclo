apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '6'
    field.cattle.io/description: >-
      Servicio de balanceo de cargas con haproxy para reenviar trafico a el
      cluster de argocd.
    field.cattle.io/publicEndpoints: >-
      [{"addresses":["217.18.163.165"],"port":443,"protocol":"HTTPS","serviceName":"haproxy:haproxy","ingressName":"haproxy:guestbook","hostname":"lab2.pmolden.es","allNodes":false},{"addresses":["217.18.163.165"],"port":443,"protocol":"HTTPS","serviceName":"haproxy:haproxy","ingressName":"haproxy:nginx-test","hostname":"lab.pmolden.es","allNodes":false},{"addresses":["217.18.163.165"],"port":80,"protocol":"HTTP","serviceName":"haproxy:haproxy","ingressName":"haproxy:argocd","hostname":"argocd.pmolden.es","allNodes":false}]
  creationTimestamp: '2023-05-15T07:20:16Z'
  generation: 83
  labels:
    workload.user.cattle.io/workloadselector: apps.deployment-haproxy-haproxy
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2023-05-31T10:12:40Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:field.cattle.io/description: {}
            f:field.cattle.io/publicEndpoints: {}
          f:labels:
            .: {}
            f:workload.user.cattle.io/workloadselector: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:workload.user.cattle.io/workloadselector: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"haproxy-0"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/usr/local/etc/haproxy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"haproxy-conf"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: rancher
      operation: Update
      time: '2023-05-31T10:12:40Z'
  name: haproxy
  namespace: haproxy
  resourceVersion: '2781760'
  uid: 6f3af5ac-cc85-4dc0-9627-fd82d03357e0
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-haproxy-haproxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-haproxy-haproxy
      namespace: haproxy
    spec:
      containers:
        - image: haproxy
          imagePullPolicy: IfNotPresent
          name: haproxy-0
          ports:
            - containerPort: 80
              name: haproxy-http
              protocol: TCP
            - containerPort: 443
              name: haproxy-https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /usr/local/etc/haproxy
              name: haproxy-conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: haproxy-config
            optional: false
          name: haproxy-conf
status:
  availableReplicas: 2
  conditions:
    - lastTransitionTime: '2023-05-15T07:20:16Z'
      lastUpdateTime: '2023-05-30T08:17:05Z'
      message: ReplicaSet "haproxy-58f767b9b7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2023-05-30T08:20:19Z'
      lastUpdateTime: '2023-05-30T08:20:19Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 83
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
